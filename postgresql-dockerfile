FROM centos:7

MAINTAINER yamamoto@itmol.com

ENV LANG=en_US.UTF-8


# --------------------------------------
# RDKitインストール開始

ENV RDBASE /usr/local/RDKit_2016_03_1
ENV LD_LIBRARY_PATH /lib:$RDBASE/lib
ENV PYTHONPATH $RDBASE
ADD ./softwares/RDKit_2016_03_1.tgz /usr/local/
ADD ./softwares/INCHI-1-API.ZIP /tmp

RUN set -x \
    && yum install -y gcc-c++ boost-devel make cmake epel-release unzip tar \
    && yum install -y python-devel python-pillow python-pip \
    && yum clean all \
    && pip install pip --upgrade --no-cache-dir \
    && pip install --no-cache-dir numpy scipy \
    && mv /usr/local/rdkit-Release_2016_03_1 /usr/local/RDKit_2016_03_1 \
    && mkdir $RDBASE/External/INCHI-API/src \
    && unzip /tmp/INCHI-1-API.ZIP -d /tmp \
    && cp /tmp/INCHI-1-API/INCHI_API/inchi_dll/* $RDBASE/External/INCHI-API/src \
    && rm -rf /tmp/INCHI-1-API* \
    && mkdir $RDBASE/build \
    && cd $RDBASE/build \
    && cmake -DRDK_BUILD_INCHI_SUPPORT=ON -DBOOST_ROOT=/usr/lib64 -D PYTHON_EXECUTABLE=/usr/bin/python .. \
    && make \
    && make install \
    && rm -rf $RDBASE/Code $RDBASE/build \
    && yum remove -y gcc-c++ boost-devel epel-release python-devel

# RDKitインストール終了
# --------------------------------------

# --------------------------------------
# PostgreSQLインストール開始

ENV POSTGRES_USER postgres
ENV POSTGRES_PASSWORD postgres
ENV POSTGRES_HOME /usr/local/pgsql
ENV PGLIB $POSTGRES_HOME/lib
ENV PGDATA $POSTGRES_HOME/data
ENV PATH $PATH:$POSTGRES_HOME/bin
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:$PGLIB
ENV PGCONF_HOSTDIR ./postgresql-config
ADD ./softwares/postgresql-9.5.4.tar.gz /tmp

RUN yum install -y bison flex readline-devel zlib-devel gettext make python-devel \
    && yum clean all \
    && mkdir /usr/local/pgsql \
    && useradd $POSTGRES_USER \
    && chown $POSTGRES_USER:$POSTGRES_USER /usr/local/pgsql \
    && chown -R $POSTGRES_USER:$POSTGRES_USER /tmp/postgresql-9.5.4

USER $POSTGRES_USER

RUN cd /tmp/postgresql-9.5.4 \
    && ./configure --prefix=/usr/local/pgsql --enable-nls --disable-thread-safety \
        --with-python CC='gcc' CFLAGS='-O3' CXX='gcc' CXXFLAGS='-O3' \
    && gmake \
    && gmake install \
    && mkdir $PGDATA \
    && rm -rf /tmp/postgresql-9.5.4

ADD ./postgresql-entrypoint.sh /
ADD $PGCONF_HOSTDIR /tmp

USER root

RUN chown $POSTGRES_USER:$POSTGRES_USER /tmp/postgresql.conf \
    && chown $POSTGRES_USER:$POSTGRES_USER /tmp/pg_hba.conf \
    && chown $POSTGRES_USER:$POSTGRES_USER /postgresql-entrypoint.sh \
    && chmod +x /postgresql-entrypoint.sh

USER $POSTGRES_USER

EXPOSE 5432

ENTRYPOINT ["/postgresql-entrypoint.sh"]

# PostgreSQLインストール終了
# --------------------------------------


# 必要なファイル
# postgresql-dockerfile
# configs/postgresql_1.conf
# configs/pg_hba_1.conf

# イメージを構築する
# `docker build -t tetsuyajs/postgresql:0.1 -f postgresql-dockerfile .`

# コンテナをフォアグラウンドで起動
# `docker run -it --name pgsql1 -p 5434:5432 --volumes-from testvol tetsuyajs/postgresql:0.1 bash`
# (何も出来ないのでCtrl+P Ctrl+Qで抜けること)
# (Ctrl+Cをするとコンテナも終了しつつ抜ける)

# コンテナをバックグラウンドで起動
# `docker run -d --name pgsql1 -p 5434:5432 --volumes-from testvol tetsuyajs/postgresql:0.1`

# コンテナにbashシェルで接続
# docker exec -it pgsql1 bash
# (docker attachで入るとフォアグラウンドで起動しているサーバープロセスの中で止まる)

# コンテナを終了させる
# docker stop pgsql1

# コンテナを削除する
# docker rm pgsql1

# イメージを削除する
# docker rmi tetsuyajs/postgresql:0.1
